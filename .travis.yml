language: c
group: travis_stable
sudo: required

env:
  global:
    - PAGER=cat
    - HIVE_HOME=/opt/apache-hive-2.1.1-bin
    - HADOOP_HOME=/opt/hadoop-2.7.5

addons:
  postgresql: '10'
  apt:
    packages:
    - postgresql-server-dev-10
    - mysql-server-core-5.6
    - mysql-client-5.6
    - mysql-server-5.6
    - unixodbc-dev
    - odbcinst         # ODBC core
    - odbc-postgresql  # PgSQL ODBC
    - libmyodbc        # MySQL ODBC
    - freetds-dev      # SQL Server ODBC
    - freetds-bin      # SQL Server Tools
    - tdsodbc          # FreeTDS driver

before_install:
  # Decrypt config files
  - openssl aes-256-cbc -K $encrypted_d52b986e6313_key -iv $encrypted_d52b986e6313_iv -in $TRAVIS_BUILD_DIR/test/config/hive.config.enc -out $TRAVIS_BUILD_DIR/test/config/hive.config -d
  - openssl aes-256-cbc -K $encrypted_d52b986e6313_key -iv $encrypted_d52b986e6313_iv -in $TRAVIS_BUILD_DIR/test/config/postgres.config.enc -out $TRAVIS_BUILD_DIR/test/config/postgres.config -d
  - openssl aes-256-cbc -K $encrypted_d52b986e6313_key -iv $encrypted_d52b986e6313_iv -in $TRAVIS_BUILD_DIR/test/config/mysql.config.enc -out $TRAVIS_BUILD_DIR/test/config/mysql.config -d
  - openssl aes-256-cbc -K $encrypted_d52b986e6313_key -iv $encrypted_d52b986e6313_iv -in $TRAVIS_BUILD_DIR/test/config/sqlserver.config.enc -out $TRAVIS_BUILD_DIR/test/config/sqlserver.config -d

  # Add custom PPAs from cartodb
  # - sudo add-apt-repository -y ppa:cartodb/postgresql-9.5
  # - sudo add-apt-repository -y ppa:cartodb/odbc
  # - sudo apt-get update

  # Install postgres db and build deps
  - sudo /etc/init.d/postgresql stop # stop travis default instance
  - sudo apt-get -y remove --purge postgresql-9.2
  - sudo apt-get -y remove --purge postgresql-9.3
  - sudo apt-get -y remove --purge postgresql-9.4
  - sudo apt-get -y remove --purge postgresql-9.5
  - sudo apt-get -y remove --purge postgresql-9.6
  - sudo rm -rf /var/lib/postgresql/
  - sudo rm -rf /var/log/postgresql/
  - sudo rm -rf /etc/postgresql/
  - sudo apt-get -y remove --purge postgis-2.2
  - sudo apt-get -y autoremove

  - sudo apt-get -y install postgresql-10

  # configure it to accept local connections from postgres
  - echo -e "# TYPE  DATABASE        USER            ADDRESS                 METHOD \nlocal   all             postgres                                trust\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            trust" | sudo tee /etc/postgresql/10/main/pg_hba.conf
  - sudo /etc/init.d/postgresql restart 10

  # Local HIVE installation
  - echo -e "Host *\n   StrictHostKeyChecking no" | sudo tee ~/.ssh/config
  - ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa
  - cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys
  - chmod 0600 ~/.ssh/authorized_keys
  - sudo apt-get -y install openjdk-7-jre
  - wget --quiet --directory-prefix=/opt http://apache.rediris.es/hadoop/core/hadoop-2.7.5/hadoop-2.7.5.tar.gz
  - wget --quiet --directory-prefix=/opt http://apache.rediris.es/hive/hive-2.1.1/apache-hive-2.1.1-bin.tar.gz
  - tar -xzf /opt/hadoop-2.7.5.tar.gz -C /opt
  - tar -xzf /opt/apache-hive-2.1.1-bin.tar.gz -C /opt
  - sed -i -- 's/export JAVA_HOME=${JAVA_HOME}/export JAVA_HOME=\/usr\/lib\/jvm\/java-7-openjdk-amd64/g' $HADOOP_HOME/etc/hadoop/hadoop-env.sh
  - $HADOOP_HOME/bin/hdfs dfs -mkdir /tmp/warehouse
  - $HADOOP_HOME/bin/hdfs dfs -chmod g+w /tmp/warehouse
  - $HADOOP_HOME/bin/hdfs dfs -mkdir /tmp/warehouse/fdw_tests
  - $HADOOP_HOME/bin/hdfs dfs -chmod g+w /tmp/warehouse/fdw_tests
  - cp $TRAVIS_BUILD_DIR/test/fixtures/hive_example.csv /tmp/warehouse/fdw_tests
  - $HADOOP_HOME/sbin/start-dfs.sh
  - $HIVE_HOME/bin/schematool -initSchema -dbType derby
  - nohup $HIVE_HOME/bin/hive --service hiveserver2 &
  # Wait for server to start
  - sleep 10
  - $HIVE_HOME/bin/beeline -u jdbc:hive2://localhost:10000 -f $TRAVIS_BUILD_DIR/test/fixtures/hive_fixtures.sql

  # Install Hiveserver2 driver
  - sudo apt-get install libsasl2-modules-gssapi-mit
  - wget --quiet --directory-prefix=/tmp http://public-repo-1.hortonworks.com/HDP/hive-odbc/2.1.2.1002/debian/hive-odbc-native_2.1.2.1002-2_amd64.deb
  - sudo dpkg -i /tmp/hive-odbc-native_2.1.2.1002-2_amd64.deb

  # SQL Server
  # - sudo apt-get -y install freetds=1.00.14cdb7

  # ODBC installation ini file
  - echo "[PostgreSQL ANSI]" | sudo tee /etc/odbcinst.ini
  - echo "Description = PostgreSQL ODBC driver (ANSI version)" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver      = psqlodbca.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Setup       = libodbcpsqlS.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Debug       = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "CommLog     = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "UsageCount  = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "\n" | sudo tee -a /etc/odbcinst.ini
  - echo "[PostgreSQL Unicode]" | sudo tee -a /etc/odbcinst.ini
  - echo "Description = PostgreSQL ODBC driver (Unicode version)" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver      = psqlodbcw.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Setup       = libodbcpsqlS.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Debug       = 0" | sudo tee -a /etc/odbcinst.ini
  - echo "CommLog     = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "UsageCount  = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "\n" | sudo tee -a /etc/odbcinst.ini
  - echo "[MySQL]" | sudo tee -a /etc/odbcinst.ini
  - echo "Description = MySQL driver" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver      = libmyodbc.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Setup       = libodbcmyS.so" | sudo tee -a /etc/odbcinst.ini
  - echo "CPTimeout   =" | sudo tee -a /etc/odbcinst.ini
  - echo "CPReuse     =" | sudo tee -a /etc/odbcinst.ini
  - echo "UsageCount  = 1" | sudo tee -a /etc/odbcinst.ini
  - echo "\n" | sudo tee -a /etc/odbcinst.ini
  - echo "[Hortonworks Hive ODBC Driver 32-bit]" | sudo tee -a /etc/odbcinst.ini
  - echo "Description=Hortonworks Hive ODBC Driver (32-bit)" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver=/usr/lib/hive/lib/native/Linux-i386-32/libhortonworkshiveodbc32.so" | sudo tee -a /etc/odbcinst.ini
  - echo "\n" | sudo tee -a /etc/odbcinst.ini
  - echo "[Hortonworks Hive ODBC Driver 64-bit]" | sudo tee -a /etc/odbcinst.ini
  - echo "Description=Hortonworks Hive ODBC Driver (64-bit)" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver=/usr/lib/hive/lib/native/Linux-amd64-64/libhortonworkshiveodbc64.so" | sudo tee -a /etc/odbcinst.ini
  - echo "[FreeTDS]" | sudo tee -a /etc/odbcinst.ini
  - echo "Driver=/usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so" | sudo tee -a /etc/odbcinst.ini
  - echo "Setup=/usr/lib/x86_64-linux-gnu/odbc/libtdsS.so" | sudo tee -a /etc/odbcinst.ini

install:
  - bash $TRAVIS_BUILD_DIR/test/fixtures/load_all_fixtures.sh
  - bash $TRAVIS_BUILD_DIR/test/tests-generator.sh
  - cat $TRAVIS_BUILD_DIR/test/config/postgres.config
  - cat $TRAVIS_BUILD_DIR/test/sql/postgres_10_installation_test.sql
  - psql -U postgres -d fdw_tests -c "select * from pg_foreign_server"
  - psql -U postgres -d fdw_tests -c "select * from pg_user_mapping"
  - psql -U postgres -d fdw_tests -c "select * from pg_foreign_table"
  - psql -U postgres -c "select * from pg_foreign_data_wrapper"
  - ls -l /usr/lib/*odbc*
  - sudo make install

script:
  - make integration_tests || { cat test/regression.diffs; false; }

after_failure:
  - sudo cat /var/log/postgresql/postgresql-10-main.log
